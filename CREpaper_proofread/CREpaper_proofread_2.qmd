[TextBlock(text='<edited_text>\nInterestingly, if the panel data is balanced, $\\check x_{i}$ and $\\check x_{t}$ can be estimated simply as the individual or period specific average. Furthermore, they would be orthogonal and @eq-mcre-2 could be expressed using two equations like @eq-cre-2, one for each dimension. In either case, the final model would be: \n\n$$y_{i,t} = \\beta_0 + x_{i,t}\\beta_x + z_{i}\\beta_z + w_{t}\\beta_w + \\gamma_0 + \\check x_{i}\\gamma + \\check x_{t}\\delta+ v_{i,t} + u_{i,t}\n$${#eq-mcre-final}\n\nwhere $v_{i,t}$ is the compound error term ($v_{i}+v_{t}$) that is uncorrelated with $x_{i,t}$, which could be estimated using OLS. However, balanced panel data is not the norm.  \n\nWhen the panel data is unbalanced, $\\check x_{i}$ and $\\check x_{t}$ cannot be estimated as simple group averages. This is similar to the problem of using the within transformation for the estimation of M-way fixed effects (@rios2015, @correia_2016).^[As described in @rios2015, it is possible to implement a within-transformation using an iterative demeaning process until convergence. More recently, StataNow 18.5 also released a command that allows for the estimation of M-way fixed effects using a similar (yet more efficient) approach.] In this case, instead of estimating $\\check x$ as individual or group averages, one should estimate them as the solution to the following model: \n\n$$x_{i,t} = \\check x_{i} + \\check x_{t} + \\epsilon_{i,t}\n$${#eq-mcre-3}\n\nNotice that we assume the constant to be zero, given the zero mean assumption. $\\check x_{i}$ and $\\check x_{t}$ in this model can be estimated using an iterative demeaning, as long as the sample used is the same one as in the original model (@eq-mcre-1). In addition, one should only concentrate on variables that show variation in both dimensions. Once these are estimated, the final model can be estimated using @eq-mcre-final.  \n\nExtending this analogy to three or more dimensions is straightforward. One simply requires to: \n\n1. Define the sample that is common to all dimensions.\n2. Estimate the group pseudo-averages for each dimension, and for all variables that show variation in all dimensions.\n3. Include the new variables in the main model, and estimate that model using OLS. \n\n## Nonlinear Models and CRE \n\nWhile the CRE approach has some advantages over FE and RE in linear models, including the option for a robust test to choose between RE and FE models, unless one is interested in the effects of time-invariant variables, the incentives to use CRE over FE are minimal in the framework of linear models. However, as discussed in @wooldridge2019 and @wooldridge2023, CRE can be particularly important to provide an alternative to fixed effect estimation in non-linear models, where the simple inclusion of dummies is not possible due to the incidental parameter problem, and a fixed effect estimator is not available. In fact, @wooldridge2010econometric shows that the CRE approach applies to commonly used models, such as probit, tobit, and count models, among others. \n\nConsider a data generating process for a non-linear model, where the latent linear index is given by: \n\n$$y^*_{i,t} = \\beta_0 + x_{i,t}\\beta_x + z_{i}\\beta_z + \\alpha_i \\\\\n$${#eq-nl-1}\n\nIn this case, $y^*$ is the expected latent variable that depends on time varying and time invariant variables, as well as an individual-specific effect. The observed variable $y_{i,t}$ can then be generated as a random draw from a distribution that depends on $y^*_{i,t}$. For example: \n\n$$\\begin{aligned}\n\\text{probit: } && y_{i,t} &= 1\\{y^*_{i,t}+u_{i,t}>0\\} \\text{ with } u_{i,t}\\sim N(0,1) \\\\ \n\\text{poisson: } && y_{i,t} & \\sim  poisson(exp(y^*_{i,t})) \\\\\n\\text{tobit: } && y_{i,t} &= max(0, y^*_{i,t}+u_{i,t}) \\text{ with } u_{i,t}\\sim N(0,\\sigma) \\\\\netc\n\\end{aligned}\n$$\n\nIn all these cases, there is an explicit individual fixed component $\\alpha_i$, which may cause a bias on estimated coefficients if not accounted for. Furthermore, while estimating models with explicit fixed effects is possible for some models, like the poisson or logit, explicit fixed effects estimators are not available for probit or tobit models, among others, and simply including dummies for individual fixed effects does not yield consistent estimates due to the incidental parameter problem. \n\n@wooldridge2019 and @wooldridge2010econometric show that the CRE approach can be used to estimate these models consistently, by following the same logic as in the linear case. That is, estimate the group specific means for the time-varying variables and include them in the model specification, before the estimation of the non-linear model. The linear model could be directly estimated using pooled cross-section, and clustering standard errors at the panel level. In fact, this approach has been used in @wooldridge2023 to estimate treatment effects of staggered adoption of treatments in non-linear models, albeit concentrating on a single dimension (panel). \n\nIn this framework, `cre` has the additional advantage over other methods. Because one has explicit access to all the variables in the model, including the constructed variables, the estimation of partial effects can be done directly using available post-estimation commands such as `margins`. There are no other changes in the estimation process, and the strategy is easily extended to multiple fixed effects, as discussed in the previous section. Furthermore, as discussed in @wooldridge2019, one can consider even more flexible specifications by allowing for interactions between the group-specific means and other variables in the model, including time dummy variables. \n\n# `cre` Command: Implementation in Stata {#sec-3}\n\nThe `cre` command is a prefix command that estimates the CRE model for most linear and non-linear models in Stata. The syntax of the command is as follows: \n\n`cre, abs(varlist) [options]: [estimation command] [variables] [if in] [weights], [options]` \n\nWhere `estimation command` is the command that will be used to estimate the model. In this case, the `cre` command will identify all the dependent variables in the model, along with other sample restrictions, and calculate conditional group means based on the groups defined by the `abs(varlist)`. The group means are then added to the model before estimation. The `cre` command supports both balanced and unbalanced panels, as well as multiple fixed effects relying on `reghdfe` for the estimation of the pseudo conditional means. \n\nA detailed list of other options include: \n\n- `abs(varlist)`: a list of variables that define the groups for which the conditional means will be calculated. This can be a single variable or a combination of variables.\n- `drop`: if specified, the command will drop the group means variables from the dataset after estimation.\n- `dropsingletons`: if specified, the command will drop observations that have a single observation in any given group. Note that `reghdfe` default is to drop these observations, rather than keep them as in this case.\n- `prefix`: provides a prefix to be used to name the group means variables. The default uses "`m`" as a prefix. For every variable that has variation across all groups defined in `abs(varlist)`, the command will create a new variable with the prefix followed by the variable name. `m1_x`, `m2_x`, etc, corresponding to the group means for variable `x` for the first, second, etc group defined in `abs(varlist)`. Note that when trying to estimate means for interaction terms, the command will attempt to name the new variable using Stata guidelines for variable names. If the variable name is too long, the command will create a generic name `_v#`.\n- `hdfe(options)`: options to be passed to `reghdfe` command. This can be used to make better use of alternative speed-up options in `reghdfe`. \n\nIn addition to the standard information left by the estimation command, the `cre` will add the list of group mean variables created for the estimation in `e(m_list)`. \n\nThe command has been tested for most 1 and 2 word commands, and after `ivreg` and `ivregress` commands. However, for unsupported commands, an alternative approach would be to use `cre` for a fully specified model, and then use the command of interest including the group means variables manually in the model. \n\n# Monte Carlo Simulations {#sec-4}\n\nTo assess the performance of the `cre` command, we conducted a Monte Carlo simulation study. Instead of focusing on a model with a single fixed effect, we considered a case with two unobserved fixed effects, which allows for a structure of unbalanced panels. Without loss of generality, we also consider a model with 2 explanatory variables that are correlated with the unobserved fixed effects, but are otherwise exogenous. Finally, we consider that the expected latent variable is a linear function of the explanatory variables and fixed effects. The data generating process is as follows: \n\n```\nset obs 1000\n// Generates indicators for the two fixed effects\ngen id1 = runiformint(1,100)\ngen id2 = runiformint(1,100)\n// fixed effects are assumed follow a uniform distribution\ngen c1 = runiform(-.5,.5)\ngen c2 = runiform(-.5,.5)\nbysort id1:replace c1 = c1[1]\nbysort id2:replace c2 = c2[1] \n// explanatory variables are correlated with the fixed effects, \n// thus correlated with each other\ngen x1 = runiform(-1,1)+invnormal(c1+.5)+invnormal(c2+.5)\ngen x2 = runiform(-1,1)-invnormal(c1+.5)-invnormal(c2+.5)\n// and the expected latent ey_star is a linear combination x1, x2, c1, and c2\ngen y_star = 1 + x1 + x2 + c1 + c2\n```\n</edited_text>\n\n<change_explanations>\n1. Corrected spelling of "orthogonal" in the first paragraph.\n2. Added a comma after "In addition" in the paragraph discussing equation @eq-mcre-3.\n3. Changed "three or dimensions" to "three or more dimensions" for clarity.\n4. Corrected "Consider the a data generating process" to "Consider a data generating process" in the Nonlinear Models section.\n5. Changed "pool crossection" to "pooled cross-section" for correct terminology.\n6. Corrected "observatations" to "observations" in the description of the `dropsingletons` option.\n7. Changed "nonsuported" to "unsupported" in the last paragraph of the `cre` Command section.\n8. Added "with" before "2 explanatory variables" in the Monte Carlo Simulations section for better clarity.\n</change_explanations>', type='text')]